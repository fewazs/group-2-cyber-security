{"ast":null,"code":"var _jsxFileName = \"/home/noname/Desktop/dns tunneling prevention v2/group-2-cyber-security/dashboard/react-frontend/src/StatsDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DeviceSelector from './DeviceSelector';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction StatsDashboard() {\n  _s();\n  const [stats, setStats] = useState(null);\n  const [alerts, setAlerts] = useState([]);\n  const [device, setDevice] = useState('all');\n  const [showSpotify, setShowSpotify] = useState(false);\n  const [queries, setQueries] = useState([]);\n  const [trafficMode, setTrafficMode] = useState('dns'); // 'dns' or 'all'\n  const [allTraffic, setAllTraffic] = useState([]);\n  const [isCapturing, setIsCapturing] = useState(false);\n  const [captureFilename, setCaptureFilename] = useState(\"\");\n  useEffect(() => {\n    async function fetchStats() {\n      const res = await axios.get('/stats');\n      setStats(res.data);\n      const alertsRes = await axios.get('/alerts');\n      setAlerts(alertsRes.data);\n      if (trafficMode === 'dns') {\n        const queriesRes = await axios.get('/api/dns-stats');\n        setQueries(queriesRes.data.queries || []);\n      } else {\n        const allRes = await axios.get('/api/all-traffic');\n        setAllTraffic(allRes.data || []);\n      }\n    }\n    fetchStats();\n    const interval = setInterval(fetchStats, 5000);\n    return () => clearInterval(interval);\n  }, [device, showSpotify, trafficMode]);\n  const handleCapture = async () => {\n    const filename = window.prompt(\"Enter filename for new capture:\", `capture_${Date.now()}.json`);\n    if (!filename) return;\n    setCaptureFilename(filename);\n    await axios.post('/api/capture/start', {\n      filename\n    });\n    setIsCapturing(true);\n  };\n  const handleStop = async () => {\n    await axios.post('/api/capture/stop');\n    setIsCapturing(false);\n  };\n  const handleSave = async () => {\n    const filename = window.prompt(\"Enter filename to save as:\", captureFilename || `capture_${Date.now()}.json`);\n    if (!filename) return;\n    await axios.post('/api/capture/save', {\n      filename\n    });\n    alert(`Capture saved as ${filename}!`);\n  };\n  const filteredQueries = queries.filter(q => {\n    if (device !== 'all' && q.src_ip !== device) return false;\n    if (showSpotify && !q.query.includes('spotify')) return false;\n    return true;\n  });\n  const filteredAllTraffic = allTraffic.filter(pkt => {\n    if (device !== 'all' && pkt.src_ip !== device) return false;\n    return true;\n  });\n  if (!stats) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading statistics...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Spotify DNS Traffic Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1em'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCapture,\n        disabled: isCapturing,\n        children: \"Capture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStop,\n        disabled: !isCapturing,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeviceSelector, {\n      onSelect: setDevice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: showSpotify,\n        onChange: e => setShowSpotify(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), \"Show only Spotify queries\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Traffic Mode: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: trafficMode,\n        onChange: e => setTrafficMode(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dns\",\n          children: \"DNS Only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Traffic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Real Spotify DNS Requests: \", stats.real_spotify]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Fake Spotify DNS Tunneling Attempts: \", stats.fake_spotify]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Alerts: \", stats.alerts]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: alerts.map((alert, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: alert\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), trafficMode === 'dns' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"DNS Queries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredQueries.map((q, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [q.src_ip, \": \", q.query]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All Network Traffic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredAllTraffic.map((pkt, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [pkt.timestamp, \": \", pkt.src_ip, \" \\u2192 \", pkt.dst_ip, \" [\", pkt.proto, \"] Size: \", pkt.pkt_size]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(StatsDashboard, \"CCI7uaOxG19ttYcv/f9ZzmMN4vc=\");\n_c = StatsDashboard;\nexport default StatsDashboard;\nvar _c;\n$RefreshReg$(_c, \"StatsDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","DeviceSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","StatsDashboard","_s","stats","setStats","alerts","setAlerts","device","setDevice","showSpotify","setShowSpotify","queries","setQueries","trafficMode","setTrafficMode","allTraffic","setAllTraffic","isCapturing","setIsCapturing","captureFilename","setCaptureFilename","fetchStats","res","get","data","alertsRes","queriesRes","allRes","interval","setInterval","clearInterval","handleCapture","filename","window","prompt","Date","now","post","handleStop","handleSave","alert","filteredQueries","filter","q","src_ip","query","includes","filteredAllTraffic","pkt","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","marginBottom","onClick","disabled","onSelect","type","checked","onChange","e","target","value","real_spotify","fake_spotify","map","idx","timestamp","dst_ip","proto","pkt_size","_c","$RefreshReg$"],"sources":["/home/noname/Desktop/dns tunneling prevention v2/group-2-cyber-security/dashboard/react-frontend/src/StatsDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DeviceSelector from './DeviceSelector';\n\nfunction StatsDashboard() {\n  const [stats, setStats] = useState(null);\n  const [alerts, setAlerts] = useState([]);\n  const [device, setDevice] = useState('all');\n  const [showSpotify, setShowSpotify] = useState(false);\n  const [queries, setQueries] = useState([]);\n  const [trafficMode, setTrafficMode] = useState('dns'); // 'dns' or 'all'\n  const [allTraffic, setAllTraffic] = useState([]);\n  const [isCapturing, setIsCapturing] = useState(false);\n  const [captureFilename, setCaptureFilename] = useState(\"\");\n\n  useEffect(() => {\n    async function fetchStats() {\n      const res = await axios.get('/stats');\n      setStats(res.data);\n      const alertsRes = await axios.get('/alerts');\n      setAlerts(alertsRes.data);\n      if (trafficMode === 'dns') {\n        const queriesRes = await axios.get('/api/dns-stats');\n        setQueries(queriesRes.data.queries || []);\n      } else {\n        const allRes = await axios.get('/api/all-traffic');\n        setAllTraffic(allRes.data || []);\n      }\n    }\n    fetchStats();\n    const interval = setInterval(fetchStats, 5000);\n    return () => clearInterval(interval);\n  }, [device, showSpotify, trafficMode]);\n\n  const handleCapture = async () => {\n    const filename = window.prompt(\"Enter filename for new capture:\", `capture_${Date.now()}.json`);\n    if (!filename) return;\n    setCaptureFilename(filename);\n    await axios.post('/api/capture/start', { filename });\n    setIsCapturing(true);\n  };\n  const handleStop = async () => {\n    await axios.post('/api/capture/stop');\n    setIsCapturing(false);\n  };\n  const handleSave = async () => {\n    const filename = window.prompt(\"Enter filename to save as:\", captureFilename || `capture_${Date.now()}.json`);\n    if (!filename) return;\n    await axios.post('/api/capture/save', { filename });\n    alert(`Capture saved as ${filename}!`);\n  };\n\n  const filteredQueries = queries.filter(q => {\n    if (device !== 'all' && q.src_ip !== device) return false;\n    if (showSpotify && !q.query.includes('spotify')) return false;\n    return true;\n  });\n\n  const filteredAllTraffic = allTraffic.filter(pkt => {\n    if (device !== 'all' && pkt.src_ip !== device) return false;\n    return true;\n  });\n\n  if (!stats) return <div>Loading statistics...</div>;\n\n  return (\n    <div className=\"dashboard-container\">\n      <h2>Spotify DNS Traffic Statistics</h2>\n      <div style={{ marginBottom: '1em' }}>\n        <button onClick={handleCapture} disabled={isCapturing}>Capture</button>\n        <button onClick={handleStop} disabled={!isCapturing}>Stop</button>\n        <button onClick={handleSave}>Save</button>\n      </div>\n      <DeviceSelector onSelect={setDevice} />\n      <label>\n        <input type=\"checkbox\" checked={showSpotify} onChange={e => setShowSpotify(e.target.checked)} />\n        Show only Spotify queries\n      </label>\n      <label>\n        <span>Traffic Mode: </span>\n        <select value={trafficMode} onChange={e => setTrafficMode(e.target.value)}>\n          <option value=\"dns\">DNS Only</option>\n          <option value=\"all\">All Traffic</option>\n        </select>\n      </label>\n      <ul>\n        <li>Real Spotify DNS Requests: {stats.real_spotify}</li>\n        <li>Fake Spotify DNS Tunneling Attempts: {stats.fake_spotify}</li>\n        <li>Alerts: {stats.alerts}</li>\n      </ul>\n      <h3>Recent Alerts</h3>\n      <ul>\n        {alerts.map((alert, idx) => (\n          <li key={idx}>{alert}</li>\n        ))}\n      </ul>\n      {trafficMode === 'dns' ? (\n        <>\n          <h3>DNS Queries</h3>\n          <ul>\n            {filteredQueries.map((q, idx) => (\n              <li key={idx}>{q.src_ip}: {q.query}</li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <>\n          <h3>All Network Traffic</h3>\n          <ul>\n            {filteredAllTraffic.map((pkt, idx) => (\n              <li key={idx}>{pkt.timestamp}: {pkt.src_ip} → {pkt.dst_ip} [{pkt.proto}] Size: {pkt.pkt_size}</li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default StatsDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}