{"ast":null,"code":"var _jsxFileName = \"/home/noname/Desktop/dns tunneling prevention v2/group-2-cyber-security/dashboard/react-frontend/src/StatsDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DeviceSelector from './DeviceSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StatsDashboard() {\n  _s();\n  const [stats, setStats] = useState(null);\n  const [alerts, setAlerts] = useState([]);\n  const [device, setDevice] = useState('all');\n  const [showSpotify, setShowSpotify] = useState(false);\n  const [queries, setQueries] = useState([]);\n  useEffect(() => {\n    async function fetchStats() {\n      const res = await axios.get('/stats');\n      setStats(res.data);\n      const alertsRes = await axios.get('/alerts');\n      setAlerts(alertsRes.data);\n      const queriesRes = await axios.get('/api/dns-stats');\n      setQueries(queriesRes.data.queries || []);\n    }\n    fetchStats();\n    const interval = setInterval(fetchStats, 10000);\n    return () => clearInterval(interval);\n  }, [device, showSpotify]);\n  const filteredQueries = queries.filter(q => {\n    if (device !== 'all' && q.src_ip !== device) return false;\n    if (showSpotify && !q.query.includes('spotify')) return false;\n    return true;\n  });\n  if (!stats) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading statistics...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Spotify DNS Traffic Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DeviceSelector, {\n      onSelect: setDevice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: showSpotify,\n        onChange: e => setShowSpotify(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), \"Show only Spotify queries\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Real Spotify DNS Requests: \", stats.real_spotify]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Fake Spotify DNS Tunneling Attempts: \", stats.fake_spotify]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Alerts: \", stats.alerts]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: alerts.map((alert, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: alert\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"DNS Queries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredQueries.map((q, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [q.src_ip, \": \", q.query]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(StatsDashboard, \"MUP6glWPouBELpf2smvTvwMI5NI=\");\n_c = StatsDashboard;\nexport default StatsDashboard;\nvar _c;\n$RefreshReg$(_c, \"StatsDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","DeviceSelector","jsxDEV","_jsxDEV","StatsDashboard","_s","stats","setStats","alerts","setAlerts","device","setDevice","showSpotify","setShowSpotify","queries","setQueries","fetchStats","res","get","data","alertsRes","queriesRes","interval","setInterval","clearInterval","filteredQueries","filter","q","src_ip","query","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSelect","type","checked","onChange","e","target","real_spotify","fake_spotify","map","alert","idx","_c","$RefreshReg$"],"sources":["/home/noname/Desktop/dns tunneling prevention v2/group-2-cyber-security/dashboard/react-frontend/src/StatsDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DeviceSelector from './DeviceSelector';\n\nfunction StatsDashboard() {\n  const [stats, setStats] = useState(null);\n  const [alerts, setAlerts] = useState([]);\n  const [device, setDevice] = useState('all');\n  const [showSpotify, setShowSpotify] = useState(false);\n  const [queries, setQueries] = useState([]);\n\n  useEffect(() => {\n    async function fetchStats() {\n      const res = await axios.get('/stats');\n      setStats(res.data);\n      const alertsRes = await axios.get('/alerts');\n      setAlerts(alertsRes.data);\n      const queriesRes = await axios.get('/api/dns-stats');\n      setQueries(queriesRes.data.queries || []);\n    }\n    fetchStats();\n    const interval = setInterval(fetchStats, 10000);\n    return () => clearInterval(interval);\n  }, [device, showSpotify]);\n\n  const filteredQueries = queries.filter(q => {\n    if (device !== 'all' && q.src_ip !== device) return false;\n    if (showSpotify && !q.query.includes('spotify')) return false;\n    return true;\n  });\n\n  if (!stats) return <div>Loading statistics...</div>;\n\n  return (\n    <div className=\"dashboard-container\">\n      <h2>Spotify DNS Traffic Statistics</h2>\n      <DeviceSelector onSelect={setDevice} />\n      <label>\n        <input type=\"checkbox\" checked={showSpotify} onChange={e => setShowSpotify(e.target.checked)} />\n        Show only Spotify queries\n      </label>\n      <ul>\n        <li>Real Spotify DNS Requests: {stats.real_spotify}</li>\n        <li>Fake Spotify DNS Tunneling Attempts: {stats.fake_spotify}</li>\n        <li>Alerts: {stats.alerts}</li>\n      </ul>\n      <h3>Recent Alerts</h3>\n      <ul>\n        {alerts.map((alert, idx) => (\n          <li key={idx}>{alert}</li>\n        ))}\n      </ul>\n      <h3>DNS Queries</h3>\n      <ul>\n        {filteredQueries.map((q, idx) => (\n          <li key={idx}>{q.src_ip}: {q.query}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default StatsDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}